<!DOCTYPE html>
<html>
	<body>
		<script type="text/javascript" src="http://iioengine.com/neuro/iioEngine-1.3.js"></script>
		<script src="http://code.jquery.com/jquery-latest.min.js"
        type="text/javascript"></script>
		<script type="text/javascript">
			App=function(app,s){

				var bgColor = s.color;

				TEST_MODE = 0;

				app.setBGColor(bgColor);

				var NUM_TRIALS = 1;
				var numTrials = NUM_TRIALS;
				var startDelay = 1000;
				var fixationTime = 500;
				var fixationMinTime = 300;
				var fixationMaxTime = 500;
				var fixationReadyTime = 500;
				var choiceDuration = 1000;
				var choiceTime = 0;
				var triggerDelay = 1000;
				var resultTime = 2000;

				var randomNums = [];
				var imgs = [];
				var fixationPoint;
				var targets = [];
				var percents = [];
				var shape;
				var centerPrompt;
				var bottomPrompt;
				var timestamp;
				var correctValue = 0;
				var tooSlowID;
				var acceptInput = false;
				var barOutline;
				var progressBar;
				var targetRadius = 24;
				var inputText;
				var sessionID;
				var getSessionID = true
				var percentSelected = -1;

				var CORRECT = 1;
				var INCORRECT = 2;
				var NOENTRY = 0;

				var results = [];

				var timestamp = new Date();
				var dd = timestamp.getDate();
				var mm = timestamp.getMonth()+1; //January is 0!
				var yyyy = timestamp.getFullYear();

				if(dd<10) {
				    dd='0'+dd
				} 

				if(mm<10) {
				    mm='0'+mm
				} 

				timestamp = mm+'/'+dd+'/'+yyyy;

				init = function(){

					var r = 0;
					var notClear = false;
					while(randomNums.length<4){
						r = iio.randomInt(1,11);
						notClear = false;
						for(var j=0;j<randomNums.length;j++)
							if(r==randomNums[j])
								notClear=true;
						if(!notClear)
							randomNums[randomNums.length]=r;
					}

					for(var i=0;i<4;i++){
						imgs[i] = new Image();
						imgs[i].src = 'img/symbol_'+randomNums[i]+'.jpg';
					}

					fixationPoint = app.add([app.center.x,app.center.y-30],{
						radius:8,
						color:'white',
						color2:'yellow',
						styles:{fillStyle:bgColor}
					})

					barOutline = app.add([app.center.x,app.height-100],{
						width:600,
						height:50,
						styles:{strokeStyle:'transparent',lineWidth:2}
					})

					progressBar = app.add([app.center.x-299,app.height-100],{
						width:1,
						height:48,
						styles:{fillStyle:'transparent'}
					})

					targets[0] = app.add([app.width/5,app.center.y-40],{
						radius:targetRadius,
						color:'blue',
						styles:{fillStyle:bgColor}
					});
					targets[1] = app.add([app.width-app.width/5,app.center.y-40],{
						radius:targetRadius,
						color:'green',
						styles:{fillStyle:bgColor}
					});

					var style={
						font:'20px Helvetica',
						textAlign:'center',
						styles:{fillStyle:bgColor}
					};
					var circleStyle = {
						radius:5,
						color:'white',
						styles:{fillStyle:bgColor}
					};

					percents[0] = app.add('< 10%',[app.center.x-4.5*app.width/10,app.center.y+100],style);
					percents[0].selectCircle = app.add([percents[0].pos.x,percents[0].pos.y+20],{
						radius:5,
						color:'white',
						styles:{fillStyle:bgColor}
					});
					for(var i=1;i<9;i++){
						percents[i] = app.add(i+'0%-'+(1+i)+'0%',[app.center.x-(4.5-i)*app.width/10,app.center.y+100],style);
						percents[i].selectCircle = app.add([percents[i].pos.x,percents[i].pos.y+20],{
							radius:5,
							color:'white',
							styles:{fillStyle:bgColor}
						});
					}
					percents[9] = app.add('90% <',[app.center.x+4.5*app.width/10,app.center.y+100],style);
					percents[9].selectCircle = app.add([percents[9].pos.x,percents[9].pos.y+20],{
						radius:5,
						color:'white',
						styles:{fillStyle:bgColor}
					});

					for(var i=0;i<2;i++)
						targets[i].outline = app.add(targets[i].pos,{
							radius:targetRadius+10,
							styles:{strokeStyle:bgColor,lineWidth:2}
						})

					centerPrompt = app.add('Enter a Session ID:',[app.center.x,app.center.y-30],{
						font:'30px Helvetica',
						textAlign:'right',
						styles:{fillStyle:'white'}
					})

					bottomPrompt = app.add('',[app.center.x,app.height-200],{
						font:'30px Helvetica',
						textAlign:'center',
						styles:{fillStyle:'white'}
					})

					inputText = app.add('',[app.center.x+10,app.center.y-30],{
						font:'30px Helvetica',
						textAlign:'left',
						styles:{fillStyle:'white'}
					});

					inputText.cursor = app.add([inputText.right(),inputText.top()-4,inputText.right(),inputText.bottom()],{
						styles:{
							lineWidth:2,
							strokeStyle:'white'
						}
					});

					inputText.cursor.toggle = false;
					app.loop(2,function(){
						if(inputText.cursor.toggle)
							inputText.cursor.styles.strokeStyle='transparent';
						else inputText.cursor.styles.strokeStyle='white';
						inputText.cursor.toggle=!inputText.cursor.toggle;
						app.draw()
					});
				}; init();

				displayFixationPoint = function(){
					clearDisplay();
					if(numTrials==0){
						endTest();
						return;
					}
					fixationTime = iio.randomInt(fixationMinTime,fixationMaxTime);
					fixationPoint.styles.fillStyle = fixationPoint.color;
					app.draw();
					setTimeout(function(){
						fixationPoint.styles.fillStyle = fixationPoint.color2;
						app.draw();
						setTimeout(function(){
							fixationPoint.styles.fillStyle = bgColor;
							displayShapes();
						},fixationReadyTime)
					},fixationTime+choiceDuration-choiceTime)
				}

				displayShapes = function(){
					numTrials--;
					acceptInput = true;
					timestamp = new Date().getTime();
					correctValue = iio.randomInt(0,2);
					if(TEST_MODE==0)
						shape = app.add([app.center.x,app.center.y-30],{img:imgs[iio.randomInt(0,imgs.length)]});
					else shape = app.add([app.width/3*2,app.center.y-30],{img:imgs[iio.randomInt(0,imgs.length)]});
					var rand = iio.randomInt(0,2);
					if(TEST_MODE==0){
						if(rand==0)
							for(var i=0;i<targets.length;i++)
								targets[i].styles.fillStyle = targets[i].color;
						else {
							targets[0].styles.fillStyle = targets[1].color;
							targets[1].styles.fillStyle = targets[0].color;
						}
					} else {
						if(rand==0) {
							targets[0].styles.fillStyle = targets[0].color;
							targets[1].styles.fillStyle = undefined;
						} else {
							targets[1].styles.fillStyle = targets[1].color;
							targets[0].styles.fillStyle = undefined;
						}
					}
					if(TEST_MODE==1){
						percents[0].styles.fillStyle = 'white';
						for(var i=0;i<percents.length;i++)
							percents[i].selectCircle.styles.fillStyle = 'white';
					}
					app.draw();
					tooSlowID = setTimeout(function(){
						acceptInput = false;
						clearDisplay();
						if(TEST_MODE==0){
							centerPrompt.text = 'Too Slow!';
							results[results.length] = NOENTRY;
						} else {
							var r = iio.randomInt(0,2);
							if(r==0)
								centerPrompt.text = 'Correct';
							else 
								centerPrompt.text = 'Incorrect';
							results[results.length] = percentSelected;
						}
						app.draw();
						setTimeout(function(){
							if(numTrials==0)
								endTest();
							else displayFixationPoint();
						},resultTime)
					},choiceDuration)
				}

				clearDisplay = function(){
					centerPrompt.text = '';
					bottomPrompt.text = '';
					bottomPrompt.styles.fillStyle = 'white';
					app.rmv(shape);
					for(var i=0;i<targets.length;i++){
						targets[i].styles.fillStyle = bgColor;
						targets[i].outline.styles.strokeStyle = bgColor;
					}
					if(TEST_MODE==1)
						for(var i=0;i<percents.length;i++){
							percents[i].styles.fillStyle = bgColor;
							percents[i].selectCircle.styles.fillStyle = bgColor;
						}
				}

				startTest = function(instructions){
					centerPrompt.text = instructions;
					centerPrompt.textAlign = 'center';
					window.removeEventListener('keyup', upListen);
					app.draw();
					setTimeout(function(){
						barOutline.styles.strokeStyle = 'white';
						progressBar.styles.fillStyle = 'white';
						displayFixationPoint();
					},startDelay);
				}

				getResultsString = function(){
					var str = '9';
					for(var i=0;i<results.length;i++)
						str+=''+results[i];
					return str;
				}

				endTest = function(){
					clearDisplay();
					barOutline.styles.strokeStyle = 'transparent';
					progressBar.styles.fillStyle = 'transparent';
					if(TEST_MODE==0){
						startTest('Starting new test. Select a percentage value with the asdfjkl; keys');
						targets[0].pos.x=app.width/3;
						targets[1].pos.x=app.width/3;
						percents[0].styles.fillStyle = 'white';
						for(var i=0;i<percents.length;i++)
							percents[i].selectCircle.styles.fillStyle = 'white';
						numTrials=10;//NUM_TRIALS;
					} else centerPrompt.text = 'Experiment Concluded';
					TEST_MODE++;
					app.draw();
					if(TEST_MODE==2){
						var u = 'save2?sessionID='+sessionID+'&date='+timestamp+'&data='+getResultsString();
						/*$.ajax({
					      url:u,//'save?sessionID='+sessionID+'&date='+timestamp+'&data='+getResultsString(),
					      complete: function (response) {
					          //$('#output').html(response.responseText);
					      },
					      error: function () {
					          //$('#output').html('Bummer: there was an error!');
					      }
					  });*/
					}
				}

				selectTrigger = function(i){
					acceptInput = false;
					clearTimeout(tooSlowID);
					choiceTime = new Date().getTime() - timestamp;
					setTimeout(function(){
						targets[i].outline.styles.strokeStyle='white';
						if(i==correctValue){
							bottomPrompt.text = 'Correct!';
							bottomPrompt.styles.fillStyle = 'yellow';
							results[results.length] = CORRECT;
							progressBar.width+=60;
							progressBar.pos.x+=30;
							if(progressBar.width>600)
								progressBar.styles.fillStyle = 'yellow';
						}
						else {
							bottomPrompt.text = 'Incorrect';
							bottomPrompt.styles.fillStyle = 'red';
							results[results.length] = INCORRECT;
						}
						app.draw();
						setTimeout(function(){
							displayFixationPoint();
							if(progressBar.width>600){
								progressBar.width = 1;
								progressBar.pos.x-=300;	
								progressBar.styles.fillStyle = 'white';
							}
							app.draw();
						},resultTime)
					},triggerDelay)
				}

				var cursorIndex=inputText.text.length;
  				var shift=false;
				window.addEventListener('keydown', function(e){
					if(getSessionID){
						e.preventDefault();
						var keyString=iio.getKeyString(e);
					    if (keyString=='enter'&&inputText.text.length>0){
					    	window.clearTimeout(app.loops[0]);
					    	sessionID=inputText.text;
					    	app.rmv(inputText.cursor);
					    	app.rmv(inputText);
					    	if(TEST_MODE==0)
					    		startTest('Starting the experiment. Select a target with the f or j keys');
					    	else startTest('Starting. Select a percentage value with the asdfjkl; keys')
					    	getSessionID=false;
						}
					    if (keyString=='shift'){
					      shift=true; return;
					    }
					    cursorIndex=inputText.keyboardEdit(e,cursorIndex,shift);
					    if (keyString=='left arrow' && cursorIndex>0) 
					      cursorIndex--;
					    else if (keyString=='right arrow' && cursorIndex<inputText.text.length) 
					      cursorIndex++;
					    var x=inputText.getX(cursorIndex);
					    inputText.cursor.pos.x=inputText.cursor.endPos.x=x;
						app.draw(app.ctx)
					}
					else if(acceptInput && TEST_MODE==0){
					    var keyString=iio.getKeyString(e);
					    if (keyString=='f') 
					    	selectTrigger(0);
					    else if (keyString=='j')
					    	selectTrigger(1);
					}
					else if(acceptInput && TEST_MODE==1){
						var keyString=iio.getKeyString(e);
						selectThis=function(n){
							for(var i=0;i<percents.length;i++)
								percents[i].selectCircle.styles.fillStyle = 'white';
							percentSelected = n;
					    	percents[n].selectCircle.styles.fillStyle = 'yellow';
						}
					    if (keyString=='a') selectThis(0);
					    else if (keyString=='s') selectThis(1);
					    else if (keyString=='d') selectThis(2);
					    else if (keyString=='f') selectThis(3);
					    else if (keyString=='g') selectThis(4);
					    else if (keyString=='h') selectThis(5);
					    else if (keyString=='j') selectThis(6);
					    else if (keyString=='k') selectThis(7);
					    else if (keyString=='l') selectThis(8);
					    else if (keyString=='semi-colon') selectThis(9);
					    app.draw();
					}
				});

				var upListen = document.addEventListener('keyup',function(e){
					if (iio.keyCodeIs('shift',e)) shift=false;
				});
				
				this.resize=function(e){

				}
			};
		    iio.start([App,{color:'black'}])
		</script>
	</body>
</html>