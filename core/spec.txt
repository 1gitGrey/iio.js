iio script specification
========================
v 1.0

Syntax

	iio script is a series of statements, which can be
	composed of one or more expressions.

	An expression can be a:

		definition
		assignment
		function call
		core function call
		conditional
		loop

	expressions are composed of:

		keywords
		variables
		core functions
		operators
		values

	whitespace is used to delineate expressions, statements,
	keywords, functions, and values.

Defnitions

	named variables are created using the 'var' keyword.

	variable definition:

		var i = value

Assignments

	values are assigned using the '=' operator.

	variable assignment:

		i = value

	variable definition and assignment:

		var i = value

Functions

	functions are variables that can be defined with
	the 'fn' keyword. The 'end' keyword is required
	at the end of the function body.

	function definition:

		var myFunction = fn(params...)
			...
		end

	ordered parameters may be defined within trailing
	parentheses. Whitespace is used to delineate parameters.

	function with parameters definition:

		var myFunction = fn( arg0 arg1 ... )
			...
		end


Function Calls

	functions are called by adding a training parentheses to
	the function name.

	function call:

		myFunction()

	function call with parameters:

		myFunction( arg0 arg1 ... )

	function call with named parameters:

		myFunction( arg0: a0 arg1: a1)


Core Function Calls

	core functions are called by adding the function keyword,
	a set of named parameters, and an 'end' keyword

	core function call:

		set
			property value ...
		end

Value Function Calls

	value functions are called with their function keyword
	and one or more parameters

	value function call:

		random 0 to 100

ACTUAL FUNCTION CALLS

	functions are called with their function name, followed
	by any number of named or un-named parameters.

	function calls may be ended with an 'end' keyword to
	preserve proper scoping.

	myFunction arg0 arg1

	myFunction
		name0 arg0
		name1 arg1

	myFunction
		name0 arg0
		name1 arg1
	end

Conditionals

	conditional blocks are created using the following syntax:

	if boolean_value
		...
	else if boolean_value
		...
	else
		...
	end

Loops

	looping blocks are created using the following syntax:

	for var = start_range to end_range [by step]
		...
	end

	OR

	while boolean_value
		...
	end

Objects

	obj
		Properties
			pos 		{ x : y : z }
			vel 		{ x : y }
			acc			{ x : y }
			width
			height
			lineWidth
			color
			alpha
			shrink
		Functions
			set
			update
			draw
			click

	regular_shape extends obj
		Properties
			size

	line extends obj
		Properties
			endPos 		{ x : y }

	square extends regular_shape

	circle extends regular_shape

	rectangle extends obj

	ellipse extends obj

	x extends obj
		Properties
			width
			height

Expressions
	Definitions
	Assignments
	Function Calls
	Core Function Calls
	Value Function Calls
	Conditionals
	Loops

Values
	Functions
	Numbers
	Vectors
	Ranges
	Colors

Objects
	Line
	Square
	Rectangle
	Circle
	Ellipse
	X
	Grid
